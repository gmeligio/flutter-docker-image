on:
  pull_request:
  workflow_dispatch:

# Read-only permissions by default
permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

jobs:
  test_windows:
    permissions:
      # Allow to write packages for the docker/scout-action to write a comment
      packages: write
      # Allow to write pull requests for the docker/scout-action to write a comment
      pull-requests: write
      # Allow to write security events for github/codeql-action/upload-sarif to upload SARIF results
      security-events: write 
    runs-on: windows-2025
    env:
      IMAGE_REPOSITORY_NAME: flutter-windows
      VERSION_MANIFEST: config/version.json
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Login to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Read environment variables from version.json
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          IMAGE_REPOSITORY_NAME: ${{ env.IMAGE_REPOSITORY_NAME }}
          VERSION_MANIFEST: ${{ env.VERSION_MANIFEST }}
        with:
          script: |
            const script = require('./script/setEnvironmentVariables.js')
            return await script({ core })

      - name: Load image metadata
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
        id: metadata
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY_PATH }}
          tags: |
            type=raw,value=${{ env.FLUTTER_VERSION }}

      # Docker Buildx is not supported for Windows containers
      # so we'll use direct docker build commands
      - name: Test image and push to local Docker daemon
        shell: powershell
        run: |
          docker build . -f windows.Dockerfile --build-arg flutter_version=${{ env.FLUTTER_VERSION }} -t ${{ fromJson(steps.metadata.outputs.json).tags[0] }} --target test

      # - name: Scan with Docker Scout
      #   id: docker-scout
      #   uses: docker/scout-action@381b657c498a4d287752e7f2cfb2b41823f566d9 # v1.17.1
      #   with:
      #     command: compare, recommendations
      #     # Use the Docker Hub image that is the first tag in the metadata
      #     image: local://${{ fromJson(steps.metadata.outputs.json).tags[0] }}
      #     # github-token is needed to be able to write the PR comment
      #     github-token: ${{ github.token }}
      #     only-fixed: true
      #     organization: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     # sarif-file: output.sarif.json
      #     to-env: prod
      #     # Enable debug logging when needed
      #     # debug: true
          # verbose-debug: true

      # Add a step to push to registries if this is a release (when triggered by workflow_dispatch)
      # - name: Push to Docker Hub
      #   if: ${{ github.event_name == 'workflow_dispatch' }}
      #   shell: powershell
      #   run: |
      #     # Tag and push to Docker Hub
      #     docker push ${{ fromJson(steps.metadata.outputs.json).tags[0] }}

  # validate_version:
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

  #     - name: Setup CUE
  #       uses: jaxxstorm/action-install-gh-release@6096f2a2bbfee498ced520b6922ac2c06e990ed2 # v2.1.0
  #       with:
  #         repo: cue-lang/cue
  #         tag: v0.12.0
  #         digest: e55cd5abd98a592c110f87a7da9ef15bc72515200aecfe1bed04bf86311f5ba1

  #     - name: Validate version.json and flutter_version.json with CUE
  #       run: |
  #         cue vet config/version.cue -d '#FlutterVersion' config/flutter_version.json
  #         cue vet config/version.cue -d '#Version' config/version.json
