on:
  push:
    branches:
      - main
jobs:
  build_push_android:
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      IMAGE_REPOSITORY_NAME: flutter-android
      ANDROID_BUILD_TOOLS_VERSION: 30.0.3
      # ANDROID_PLATFORM_VERSIONS: 28 31 33
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Login to ECR Public
        uses: docker/login-action@v2
        with:
          # AWS_REGION needs to be defined in the parent scope
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create ECR repository for final images
        uses: int128/create-ecr-repository-action@v1
        id: ecr
        with:
          public: true
          repository: ${{ env.IMAGE_REPOSITORY_NAME }}

      - name: Create ECR repository for layer cache
        uses: int128/create-ecr-repository-action@v1
        id: ecr-cache
        with:
          public: true
          repository: ${{ env.IMAGE_REPOSITORY_NAME }}/cache

      - name: Extract Flutter version from version.json
        uses: sergeysova/jq-action@v2
        id: flutter_version
        with:
          cmd: 'jq -r ".flutter.version" version.json'

      - name: Extract platform versions from version.json
        uses: sergeysova/jq-action@v2
        id: platform_versions
        with:
          cmd: 'jq -r ".android.platforms[].version" version.json | xargs'

      - name: Set environment variables from versions in the Flutter repository
        run: |
          echo "FLUTTER_VERSION=${{ steps.flutter_version.outputs.value }}" >> $GITHUB_ENV
          echo "ANDROID_PLATFORM_VERSIONS=${{ steps.platform_versions.outputs.value }}" >> $GITHUB_ENV

      - name: Set environment variable for image repository and tag
        run: |
          echo "IMAGE_REPOSITORY_PATH=${{ github.repository_owner }}/${{ env.IMAGE_REPOSITORY_NAME }}" >> $GITHUB_ENV

      - name: Set environment variable for git commit short SHA
        run: echo "GITHUB_SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-8)" >> $GITHUB_ENV

      - name: Load image metadata
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY_PATH }}
            ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}
            quay.io/${{ env.IMAGE_REPOSITORY_PATH }}
            public.ecr.aws/${{ env.IMAGE_REPOSITORY_PATH }}
          tags: |
            type=raw,value=${{ env.FLUTTER_VERSION }}-${{ env.GITHUB_SHORT_SHA }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image and push to local Docker daemon
        uses: docker/build-push-action@v4
        with:
          load: true
          cache-from: ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}:cache
          cache-to: ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}:cache
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          target: android
          build-args: |
            flutter_version=${{ env.FLUTTER_VERSION }}
            android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
            android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}

      - name: Test image structure
        uses: plexsystems/container-structure-test-action@v0.3.0
        with:
          image: ${{ fromJSON(steps.metadata.outputs.json).tags[0] }}
          config: test/android_sdk_structure.yml

      - name: Build image and push it to registries
        uses: docker/build-push-action@v4
        with:
          push: true
          # TODO: Use ECR for cache after this issue is solved https://github.com/aws/containers-roadmap/issues/876
          # cache-from: ${{ steps.ecr-cache.outputs.repository-uri }}:cache
          # cache-to: ${{ steps.ecr-cache.outputs.repository-uri }}:cache
          cache-from: ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}:cache
          cache-to: ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}:cache
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          target: android
          build-args: |
            flutter_version=${{ env.FLUTTER_VERSION }}
            android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
            android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}

      # TODO: Use kaniko for building and pushing after slowness is solved
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/970
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/875
      # TODO: Use kaniko for building and pushing after pushing to Docker daemon is solved, to be able to test Docker image, with the following issues
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/1331
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/885
      # - name: Build image and push it to registries
      #   uses: int128/kaniko-action@v1
      #   with:
      #     push: true
      #     cache: true
      #     cache-repository: ${{ steps.ecr-cache.outputs.repository-uri }}
      #     tags: ${{ steps.metadata.outputs.tags }}
      #     labels: ${{ steps.metadata.outputs.labels }}
      #     build-args: |
      #       flutter_version=${{ env.FLUTTER_VERSION }}
      #       android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
      #       android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}
      #     kaniko-args: |
      #       --skip-unused-stages=true
      #       --use-new-run=true
      #       --snapshotMode=redo
      #     target: android
      #     executor: gcr.io/kaniko-project/executor:latest

# TODO: https://github.com/snok/container-retention-policy
# TODO: Push a build image before the final image
# TODO: Run basic tests with build image
# TODO: Push final image only if tests pass https://redhat-cop.github.io/ci/publishing-images.html
