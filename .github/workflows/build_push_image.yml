on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/build_push_image.yml
      - Dockerfile
      - config/version.json
      - script/docker-entrypoint.sh
      - script/set_environment_variables.sh
      - test/**
  workflow_dispatch:

jobs:
  build_push_android:
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-22.04
    env:
      IMAGE_REPOSITORY_NAME: flutter-android
      ANDROID_BUILD_TOOLS_VERSION: 30.0.3
      VERSION_MANIFEST: config/version.json
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: Login to Docker Hub
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Quay.io
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Read environment variables from version.json
        env:
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
        run: ./script/set_environment_variables.sh

      - name: Set environment variable for image repository and tag
        run: |
          IMAGE_REPOSITORY_PATH="${{ github.repository_owner }}/${{ env.IMAGE_REPOSITORY_NAME }}"
          echo "IMAGE_REPOSITORY_PATH=$IMAGE_REPOSITORY_PATH" >> $GITHUB_ENV

          CACHE_REPOSITORY_PATH="ghcr.io/$IMAGE_REPOSITORY_PATH"
          echo "CACHE_REPOSITORY_PATH=$CACHE_REPOSITORY_PATH" >> $GITHUB_ENV

      - name: Load image metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5
        id: metadata
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY_PATH }}
            ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}
            quay.io/${{ env.IMAGE_REPOSITORY_PATH }}
          tags: |
            type=raw,value=${{ env.FLUTTER_VERSION }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3

      - name: Build image and push to local Docker daemon
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          load: true
          cache-from: ${{ env.CACHE_REPOSITORY_PATH }}:cache
          cache-to: ${{ env.CACHE_REPOSITORY_PATH }}:cache
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          target: android
          build-args: |
            flutter_version=${{ env.FLUTTER_VERSION }}
            fastlane_version=${{ env.FASTLANE_VERSION }}
            android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
            android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}

      - name: Test image
        uses: plexsystems/container-structure-test-action@c0a028aa96e8e82ae35be556040340cbb3e280ca # v0.3.0
        with:
          image: ${{ fromJSON(steps.metadata.outputs.json).tags[0] }}
          config: test/android.yml

      - name: Build image and push it to registries
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5
        with:
          push: true
          cache-from: ${{ env.CACHE_REPOSITORY_PATH }}:cache
          cache-to: ${{ env.CACHE_REPOSITORY_PATH }}:cache
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          target: android
          build-args: |
            flutter_version=${{ env.FLUTTER_VERSION }}
            fastlane_version=${{ env.FASTLANE_VERSION }}
            android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
            android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}

      - name: Update Docker Hub description
        uses: peter-evans/dockerhub-description@dc67fad7001ef9e8e3c124cb7a64e16d0a63d864 # v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
          repository: ${{ env.IMAGE_REPOSITORY_PATH }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: readme.md

      # TODO: Use kaniko for building and pushing after slowness is solved
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/970
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/875
      # TODO: Use kaniko for building and pushing after pushing to Docker daemon is solved, to be able to test Docker image, with the following issues
      # TODO: https://github.com/GoogleContainerTools/kaniko/issues/1331
      # - name: Build image and push it to registries
      #   uses: int128/kaniko-action@v1
      #   with:
      #     push: true
      #     cache: true
      #     cache-repository: ${{ steps.ecr-cache.outputs.repository-uri }}
      #     tags: ${{ steps.metadata.outputs.tags }}
      #     labels: ${{ steps.metadata.outputs.labels }}
      #     build-args: |
      #       flutter_version=${{ env.FLUTTER_VERSION }}
      #       android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
      #       android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}
      #     kaniko-args: |
      #       --skip-unused-stages=true
      #       --use-new-run=true
      #       --snapshotMode=redo
      #     target: android
      #     executor: gcr.io/kaniko-project/executor:latest
# TODO: https://github.com/snok/container-retention-policy
# TODO: Push a build image before the final image
# TODO: Run basic tests with build image
# TODO: Push final image only if tests pass https://redhat-cop.github.io/ci/publishing-images.html
