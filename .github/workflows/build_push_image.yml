on:
  push:
    branches:
      - main
jobs:
  build_push_android:
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      IMAGE_REPOSITORY_NAME: flutter-android
      ANDROID_BUILD_TOOLS_VERSION: 30.0.3
      ANDROID_PLATFORM_VERSIONS: 28 31 33
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Login to Quay.io
        uses: docker/login-action@v2
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Login to ECR Public
        uses: docker/login-action@v2
        with:
          # AWS_REGION needs to be defined in the parent scope
          registry: public.ecr.aws
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Create ECR repository for final images
        uses: int128/create-ecr-repository-action@v1
        id: ecr
        with:
          public: true
          repository: ${{ env.IMAGE_REPOSITORY_NAME }}

      - name: Create ECR repository for layer cache
        uses: int128/create-ecr-repository-action@v1
        id: ecr-cache
        with:
          public: true
          repository: ${{ env.IMAGE_REPOSITORY_NAME }}/cache

      - name: Load version.json
        id: versions
        uses: zoexx/github-action-json-file-properties@1.0.4
        with:
          file_path: "version.json"

      - name: Set environment variable for Flutter version
        run: |
          echo "FLUTTER_VERSION=${{ fromJson(steps.versions.outputs.flutter).version }}" >> $GITHUB_ENV

      - name: Set environment variable for image repository and tag
        run: |
          echo "IMAGE_REPOSITORY_PATH=${{ github.repository_owner }}/${{ env.IMAGE_REPOSITORY_NAME }}" >> $GITHUB_ENV

      - name: Load image metadata
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: |
            ${{ env.IMAGE_REPOSITORY_PATH }}
            ghcr.io/${{ env.IMAGE_REPOSITORY_PATH }}
            quay.io/${{ env.IMAGE_REPOSITORY_PATH }}
            public.ecr.aws/${{ env.IMAGE_REPOSITORY_PATH }}
          tags: |
            type=raw,value=${{ env.FLUTTER_VERSION }}-${{ github.sha }}
      
      - name: Build image and push it to registries
        uses: int128/kaniko-action@v1
        with:
          push: true
          cache: true
          cache-repository: ${{ steps.ecr-cache.outputs.repository-uri }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            flutter_version=${{ env.FLUTTER_VERSION }}
            android_build_tools_version=${{ env.ANDROID_BUILD_TOOLS_VERSION }}
            android_platform_versions=${{ env.ANDROID_PLATFORM_VERSIONS }}
          kaniko-args: |
            --skip-unused-stages=true
            --use-new-run=true
          target: android
          executor: gcr.io/kaniko-project/executor:latest

# TODO: https://github.com/snok/container-retention-policy
# TODO: Push a build image before the final image
# TODO: Run basic tests with build image
# TODO: Push final image only if tests pass https://redhat-cop.github.io/ci/publishing-images.html
